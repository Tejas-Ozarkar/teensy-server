openapi: 3.0.1
info:
  title: Teensy
  description: Tiny Url Generator
  version: 1.0.0
  contact:
    name: Tejas Ozarkar
    email: tejozarkar@gmail.com
servers:
  - url: http://localhost:8080
    description: Local Environment
  - url: http://teensyapi-env.eba-k2xfeapv.ap-south-1.elasticbeanstalk.com
    description: Production Environment
paths:
  /card:
    post:
      summary: Crate New Card
      operationId: createCard
      responses:
        200:
          description: New Card as Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardRequest'
  /url/{shortUrl}:
    get:
      summary: Get Long Url
      operationId: getLongUrl
      responses:
        200:
          description: Return Long Url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlResponseDto'
      parameters:
        - name: shortUrl
          in: path
          description: ID of pet to use
          required: true
          schema:
            type: string
  /url:
    get:
      summary: Get all Urls by User
      operationId: getUrls
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UrlResponseDto'
    post:
      summary: Crate Tiny Url
      operationId: createTinyUrl
      requestBody:
        description: Create Tiny Url
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UrlRequestDto'
        required: true
      responses:
        200:
          description: Url Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlResponseDto'
  /auth/signup:
    post:
      summary:
      operationId: signup
      requestBody:
        description: Create new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        200:
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
  /auth/signin:
    post:
      summary:
      operationId: signin
      requestBody:
        description: Logging in user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
        required: true
      responses:
        200:
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'

components:
  schemas:
    UrlRequestDto:
      type: object
      properties:
        longurl:
          type: string
    UrlResponseDto:
      type: object
      properties:
        shorturl:
          type: string
        longurl:
          type: string
    AuthRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    AuthResponse:
      type: object
      properties:
        jwt:
          type: string
    UserDto:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        username:
          type: string
        password:
          type: string
        email:
          type: string
    CardRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        icon:
          type: string
        shortUrl:
          type: string
    GenericResponse:
      type: object
      properties:
        message:
          type: string
